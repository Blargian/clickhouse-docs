name: clickhouse-style-review

on:
  pull_request:
    types:
      - synchronize
      - reopened
      - opened

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  vale:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Install Vale
        run: |
          sudo snap install vale
          vale -v # Verify installation

      - name: Set up Python
        run: |
          curl -Ls https://astral.sh/uv/install.sh | sh
          uv python install 3.12

      - name: Generate changed lines JSON report
        id: report
        run: |
          # Create output directory if it doesn't exist
          mkdir -p reports

          # Create the JSON report file
          echo "{" > reports/changed_lines.json
          first_file=true

          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            if [ -f "$file" ]; then
              if [ "$first_file" = true ]; then
                first_file=false
              else
                echo "," >> reports/changed_lines.json
              fi

              echo "  \"$file\": {" >> reports/changed_lines.json

              # Get changed lines for this file
              first_line=true
              git diff --unified=0 ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} -- "$file" | 
              grep -E "^@@" | 
              sed -E 's/^@@ -[0-9]+(,[0-9]+)? \+([0-9]+)(,[0-9]+)? @@.*$/\2/' |
              while read -r line_number; do
                if [ "$first_line" = true ]; then
                  first_line=false
                else
                  echo "," >> reports/changed_lines.json
                fi

                content=$(sed -n "${line_number}p" "$file" | sed 's/"/\\"/g')
                echo "    \"$line_number\": \"$content\"" >> reports/changed_lines.json
              done

              echo "  }" >> reports/changed_lines.json
            fi
          done

          echo "}" >> reports/changed_lines.json
          echo "Changed lines JSON report generated at reports/changed_lines.json"
          cat reports/changed_lines.json

      - name: Run vale on changed files
        if: steps.changed_lines.outputs.changed_files
        env:
          CHANGED_FILES: ${{ steps.changed_lines.outputs.changed_files }}
        run: |
          vale --config='.vale.ini' \
          "${CHANGED_FILES}" \
          --output=scripts/vale_output_template.tmpl --no-exit > vale_output.log

      - name: Parse Vale output
        if: steps.changed_lines.outputs.changed_files
        env:
          LINES_CHANGED: ${{ steps.changed_lines.outputs.changed_lines }}
        run: |
          python scripts/vale_annotations.py --data=${LINES_CHANGED}
